/* App.svelte generated by Rustle 0.1.5 */
import {
    noop,
    SvelteComponent,
    detach,
    text,
    attr,
    insert,
    element,
    append,
} from "svelte/internal"


function create_fragment(ctx) {
    let h1_1;
    let txt_2;
    let txt_3;
    let txt_4;
    let txt_5;
    let txt_6;
    let txt_7;
    let txt_8;

    return {
        c() {
            h1_1 = element('h1');
            attr(h1_1,"class","test");
            txt_2 = text("Hello ");
            txt_3 = text(/* name */ ctx[0]);
            txt_4 = text(" Clicked ");
            txt_5 = text(/* name */ ctx[0]);
            txt_6 = text(world);
            txt_7 = text(/* changed */ ctx[1]);
            txt_8 = text("!");
        },
        m(target, anchor) {
            insert(target, h1_1, anchor);
            append(h1_1, txt_2);
            append(h1_1, txt_3);
            append(h1_1, txt_4);
            append(h1_1, txt_5);
            append(h1_1, txt_6);
            append(h1_1, txt_7);
            append(h1_1, txt_8);
        },
        p: noop,
        i: noop,
        o: noop,
        d(detaching) {
            if (detaching) detach(h1_1);
        }
    };
}

let world = 2;

class App extends SvelteComponent {
    constructor(options) {
        super();
        init(this, options, null, create_fragment, safe_not_equal, {});
    }
}

export default App
